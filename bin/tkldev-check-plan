#!/bin/bash -eu
# script to check a plan (or plans) to see if the packages are avaiable

# accepts path to plan; defaults to plan/main

_RELEASE="$(lsb_release -si | tr [A-Z] [a-z])/$(lsb_release -sc)"
RELEASE=${RELEASE:-$_RELEASE}
DEBUG=${DEBUG:-}
FAB_PATH=${FAB_PATH:-/turnkey/fab}

fatal() { echo "FATAL: $@"; exit 1; }

usage() {
    cat <<EOF
$(basename $0) [-a] [-u] [-x] [<path(s)>]

Tool to process plan(s) and check that packages are available.

By default it will check plan/main (i.e. assumes that you are in
products/<appliance>). It will automatically pull in includes (e.g. common
plans).

Available packages are listed in alphabetical order, including version (to
stdout) in the format:

    pkg_name=version

All packages noted but not available will be output (to stderr by default)
in the format:

    pkg_name=NOT_AVAILABLE

Options:

    -a|--all        - Check all plans found in
                      /turnkey/fab/{common/plans/,products/*/plan/main}
    -n|--no-update  - Don't run apt update prior to checking for packages
    -o|--stdout     - Only output to stdout (even missing packages)

Encironment:

    DEBUG=y         Debug mode
    RELEASE         Release to search packages for. If not set, defaults to
                    host system ($_RELEASE).
    FAB_PATH        Path for fab. Defaults to /turnkey/fab.
EOF
}

[[ -z "$DEBUG" ]] || set -x

ALL=""
UPDATE="apt-get update -qq"
ERROR='>&2'
while [ $# -gt 0 ]; do
    case "$1" in
        -a|--all)
            ALL=y
            shift;;
        -n|--no-update)
            UPDATE=""
            shift;;
        -o|--stdout)
            ERROR=""
            shift;;
        *)
            echo "Unknown imput $1"
            usage;;
    esac
done

if [[ -n "$ALL" ]]; then
    PLANS=$(find $FAB_PATH/products/*/plan/ -type f)
    COM_PLANS=$(find $FAB_PATH/common/plans/ -type f)
else
    [[ -f plan/main ]] || fatal "plan/main not found."
    PLANS="$PWD/plan/main"
    COM_PLANS=""
fi

packages=""

for plan in $PLANS; do
    this_plan=$(fab-plan-resolve $plan -I $FAB_PATH/common/plans \
        | sed 's|\s.*$||')
    packages="$packages $this_plan"
done

if [[ -n "$COM_PLANS" ]]; then
    for plan in $COM_PLANS; do
        this_plan=$(fab-plan-resolve $plan -I $FAB_PATH/common/plans \
             | sed 's|\s.*$||')
        packages="$packages $this_plan"
    done
fi

packages=$(echo $packages | tr ' ' '\n' | sort -u)

$UPDATE
pkg_avail=""
not_avail=""
for pkg in $packages; do
    ver=$(apt-cache policy $pkg \
            | grep Candidate: | sed "s|^.*Candidate: ||")
    if [[ "$ver" =~ "none" ]]; then
        not_avail="$not_avail $pkg=NOT_FOUND"
    else
        pkg_avail="$pkg_avail $pkg=$ver"
    fi
done

echo $pkg_avail | tr ' ' '\n'
if [[ -n "$not_avail" ]]; then
    echo $not_avail | tr ' ' '\n' $ERROR
fi
